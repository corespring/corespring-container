# Note: The order is important - there are some asset calls that we want to intercept before they hit the *file

#TODO: add this import to routesImport - but only once we have a local build file for the module - don't add it at root
#import org.corespring.container.client.controllers._

GET        /session/everything/:id.json            @org.corespring.container.client.controllers.resources.Session.loadEverything(id:String)
PUT        /session/submit-answers/:id.json        @org.corespring.container.client.controllers.resources.Session.submitAnswers(id:String)

GET        /item/:itemId.json                      @org.corespring.container.client.controllers.resources.Item.load(itemId:String)
PUT        /item/:itemId.json                      @org.corespring.container.client.controllers.resources.Item.save(itemId:String)

GET        /item/:itemId/player                    @org.corespring.container.client.controllers.hooks.PlayerHooks.createSessionForItem(itemId:String)

# Hooks for the player: config, services + components
GET        /player/:sessionId/index.html                   @org.corespring.container.client.controllers.Assets.session(sessionId, file = "player.html")
GET        /player/:sessionId/player-:resource.:suffix     @org.corespring.container.client.controllers.hooks.PlayerHooks.resource(resource:String, suffix:String, sessionId:String)
GET        /player/:sessionId/*file                        @org.corespring.container.client.controllers.Assets.session(sessionId:String, file)

# Hooks for the editor: config, services + components
GET        /editor/:itemId/index.html                     @org.corespring.container.client.controllers.Assets.item(itemId:String, file = "editor.html")
GET        /editor/:itemId/editor-:resource.:suffix       @org.corespring.container.client.controllers.hooks.EditorHooks.resource(resource:String, suffix:String,itemId:String)
GET        /editor/:itemId/*file                          @org.corespring.container.client.controllers.Assets.item(itemId:String, file)
POST       /editor/:itemId/*file                          @org.corespring.container.client.controllers.Assets.upload(itemId, file)

