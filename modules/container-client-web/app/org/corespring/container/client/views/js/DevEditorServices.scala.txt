@(namespace : String, load : Call, save : Call)

(function(){
  "use strict";

  var loadedData = null;

  angular.module('@namespace', []);

  angular.module('@namespace').factory('ItemService', ['BaseService', function(BaseService){
    return {
      load: function(onSuccess, onFailure, id){
        BaseService.load(onSuccess, onFailure, id);
      },
      save: function(data, onSuccess, onFailure, id){
        BaseService.save(data, onSuccess, onFailure, id);
      }
    };
  }]);

  angular.module('@namespace').factory('BaseService', ['$http', function($http){

    function addQueryParamsIfPresent(path) {
      var href = document.location.href;
      return  path + (href.indexOf('?') == -1 ? '' :  '?' + href.split('?')[1]);
    }

    var def = {
      /**
       * Load the item, check to see if its already loaded.
       */
      load: function(onSuccess, onFailure, id){
        if(loadedData){
          onSuccess(loadedData);
        } else {

          var finalUrl = id ? '@load.url'.replace(":id", id) : '@load.url';
          finalUrl = addQueryParamsIfPresent(finalUrl);

          $http['@load.method.toLowerCase'](finalUrl)
            .success(function(data, status, headers, config){
              loadedData = data;
              onSuccess(data);
            })
            .error(function(data, status, headers, config){
              if(onFailure){
                onFailure(data);
              }
            });
        }
      },
      save: function(data, onSuccess, onFailure, id){
        var url = addQueryParamsIfPresent('@save.url.toLowerCase');
        var finalUrl = id ? url.replace(":id", id) : url;
        var method = '@save.method.toLowerCase';

        $http[method](finalUrl, data)
          .success(function(data, status, headers, config) {
            loadedData = data;
            onSuccess(data);
          })
          .error(function(data, status, headers, config) {
            if( onFailure ) {
              data = data || { error: status + ": an unknown error occured" };
              onFailure(data);
            }
          });
      }
    };
    return def;
  }]);
})();

