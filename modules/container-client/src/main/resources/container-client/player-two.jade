extends layout

block head
  link(rel="stylesheet", href="css/editor.css")


block content
  h1 Corespring Player - Test Rig
  p This is a test of isolating the player as its own directive!
  div#root.container(ng-controller="Root")
    div(ng-controller="ClientSidePreview")

      player-control-panel(player-settings="session.settings")
      corespring-player(
        player-xhtml="xhtml",
        player-model="components",
        player-session="session",
        player-responses="responses")
      button.btn.btn-primary(ng-click="submit()", ng-disabled="session.isFinished") Submit!
      label
        | Attempts left: {{session.remainingAttempts !== undefined ? session.remainingAttempts : session.maxNoOfAttempts}}

block scripts

  //build:js js/editor.js
  script(src="js/corespring/core.js")

  script(src="js/common/directives/_declaration.js")
  script(src="js/common/directives/ng-bind-html-unsafe.js")

  script(src="js/editor/directives/_declaration.js")
  script(src="js/editor/directives/control-panel.js")

  script(src="js/editor/controllers/_declaration.js")
  script(src="js/editor/controllers/root.js")
  script(src="js/editor/controllers/client-side-preview.js")

  script(src="js/editor/services/_declaration.js")
  script(src="js/editor/services/client-side-player-services.js")


  script(src="js/render/services/_declaration.js")
  script(src="js/render/services/component-register.js")

  script(src="js/render/directives/_declaration.js")
  script(src="js/render/directives/corespring-player.js")
  //endbuild

  //build:js js/extras.js
  script(src="bower_components/angular-ui/build/angular-ui.js")
  script(src="bower_components/angular-dragdrop/src/angular-dragdrop.js")
  //endbuild

  script.

    $(document).ready(function(){
      console.log("load config", document.location);

      var configPath = 'editor-config.json';

      $.get( configPath, function(data){
        console.log("data", data);

        var allScriptsAreLoaded = function(){

          console.log("all scripts are loaded");
          $("#player-body").html(data.xhtml);

          var playerDeps = [
            'corespring-common.directives',
            'corespring-editor.services',
            'corespring-editor.controllers',
            'corespring-editor.directives',
            'corespring-player.services',
            'corespring-player.directives',
            'ngDragDrop'
          ].concat(data.angular.dependencies);

          angular.module("corespring-player", playerDeps );

          angular.bootstrap(document, ["corespring-player"]);

          angular.module("corespring-player").controller('Root', ['$scope', function($scope){
              $scope.xhtml = "<h3>xhtml here...</h3><corespring-multiple-choice id='blah'></corespring-multiple-choice>";




              $scope.components = {
                blah:
                {
                  "componentType" : "corespring-multiple-choice",
                  "weight" : 4,
                  "correctResponse" : { "value" : ["2"] },
                  "scoreMapping" : {
                    "1": 0.5,
                    "2": 1,
                    "3": -1,
                    "4": -1
                  },
                  "feedback" : [
                    { "value" : "1", "feedback" : "Huh?"},
                    { "value" : "2", "feedback" : "Great Job", "notChosenFeedback" : "It was this one silly!"},
                    { "value" : "3", "feedback" : "its a magic number" },
                    { "value" : "4", "feedback" : "4 to the floor" }
                  ],
                  "model" : {
                    "prompt": "What is 1 + 1?",
                    "config": {
                      "orientation": "vertical",
                      "shuffle": true,
                      "singleChoice": true
                    },
                    "choices": [
                      {"label": "1", "value": "1"},
                      {"label": "2", "value": "2"},
                      {"label": "3", "value": "3"},
                      {"label": "4", "value": "4"}
                    ]
                  }
                }
              }

          }]);

          angular.resumeBootstrap();


          $("body").addClass('blend');
        };

        var allScripts = data.scripts.concat(data.css);
        console.log(allScripts);
        head.js.apply(null, allScripts);

        head.ready(function(){
            allScriptsAreLoaded();
        });
      });
    });




