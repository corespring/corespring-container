doctype html 
html(xmlns="http://www.w3.org/1999/html")
  head
    meta(charset="utf-8")
    meta(http-equiv="X-UA-Compatible", content="IE=edge")
    title= title

    // --- Version ---
    
    | <!-- 
    |  !{versionInfo} 
    | -->
    
    block header-scripts

    for c in css
      link(rel='stylesheet',href='#{c}')

    block extra-css
      
  body(ng-app="corespring-#{appName}", class="corespring-#{appName}-body")
    .pre-loader
      #spinner

  .main.hide-body
    block content

    for j in js
      script(type='text/javascript', src='#{j}')

    block before-main-script

    script(type="text/javascript").

      var spinnerOpts = {
        length: 17, // The length of each line
        width: 8, // The line thickness
        radius: 20, // The radius of the inner circle
        color: '#556270', // #rgb or #rrggbb or array of colors
        shadow: false, // Whether to render a shadow
        hwaccel: true // Whether to use hardware acceleration
      };

      var target = document.getElementById('spinner');
      var spinner = new Spinner(spinnerOpts).spin(target);

      $(document).ready(function () {
        setTimeout(function() {
          spinner.stop();
          $('.pre-loader').remove();
          $('.main').addClass('blend');
        }, 100);
      });
      
      var allNgModules = ['corespring-templates']
        .concat([#{ngModules}])
        .concat([#{componentNgModules}]);


      function configModals($provide) {

        function ModalOpenDispatcher() {
          var listener = null;
          this.setListener = function (value) {
            listener = value;
          };
          this.propagate = function (jqueryModal) {
            try {
              listener(jqueryModal);
            } catch (e) {
              console.warn("[ModalOpenDispatcher] Error executing listener", listener, e);
            }
          };
        }

        var modalOpenDispatcher = new ModalOpenDispatcher();
        $provide.value('ModalOpenDispatcher', modalOpenDispatcher);

        $provide.decorator('$modal', function ($delegate) {
          return {open: newOpen};

          function newOpen(b) {
            var maxAttemptsToFindModal = 10;
            var modalMarker = "modal-" + new Date().getTime();
            b.windowClass = b.windowClass + " " + modalMarker;
            setTimeout(findModalByMarker, 100);
            return $delegate.open(b);

            function findModalByMarker() {
              var $modal = $('.' + modalMarker);
              if ($modal.length > 0) {
                modalOpenDispatcher.propagate($modal);
              } else {
                if (--maxAttemptsToFindModal > 0) {
                  setTimeout(findModalByMarker, 100);
                }
              }
            }
          }
        });
      }

      angular.module( 'corespring-#{appName}', allNgModules );

    block after-main-script

    script.
      !{ngServiceLogic}
