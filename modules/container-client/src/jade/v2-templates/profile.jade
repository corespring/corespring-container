mixin form(cssClass)
  form(role='form', class=cssClass)
    block
  br/

mixin h_form
  +form('form-horizontal')
    block

mixin field(label, ngModel)
  .form-group
    label.col-sm-3.control-label(for=ngModel)= label
    .col-sm-9
      if block
        block
      else
        input.form-control(id=ngModel, ng-model=ngModel)

mixin field2(label, ngModel, formModel)
  .form-group(ng-show='#{formModel}.visible')
    label.col-sm-3.control-label(for=ngModel)= label
    .col-sm-9
      if block
        block
      else
        input.form-control(id=ngModel, ng-model=ngModel, ng-readonly='#{formModel}.readonly')

mixin select2(select2Model, msg, formModel)
  input(id=ngModel,
  ng-model=ngModel,
  type='text',
  ui-select2=select2Model,
  data-placeholder=msg,
  ng-readonly='#{formModel}.readonly')

mixin select2GradeLevel(dataProvider, msg, formModel)
  select(id=ngModel,
  ng-model=ngModel,
  ui-select2,
  multiple,
  data-placeholder=msg,
  ng-readonly='#{formModel}.readonly',
  style='width:100%;')
    option(ng-repeat="c in #{dataProvider}",value="{{c.key}}") {{c.key}}

script(type='text/ng-template', id='/templates/profile')
  .profile(ng-controller='ProfileController')
    .col-md-6
      .row.button-bar
        button.pull-right.btn.btn-default(
          ng-click="togglePreview()",
          ng-class="{'btn-warning': !previewOn}")
          | {{previewOn ? 'Close' : 'Open'}} Preview
          i.fa(ng-class="{'fa-toggle-left': previewOn, 'fa-toggle-right' : !previewOn}")

      hr/

      .row
        h2 Item Profile
        p The profile contains information key data used to store and find an item (e.g., Common Core State Standard alignment, Bloom's Taxonomy assignment, key skills, and copyright information). Authors are encouraged to include as much information as possible.
        p * Required

        +h_form
          +field2('* Title', 'taskInfo.title', 'formModels.title')
          +field2('Description', 'taskInfo.description', 'formModels.description')
          hr/

          +field2('* Primary Subject', 'taskInfo.subjects.primary', 'formModels.primarySubject')
            +select2('primarySubjectSelect2Adapter', 'Choose a subject...', 'formModels.primarySubject')

          +field2('* Related Subject', 'taskInfo.subjects.related', 'formModels.relatedSubject')
            input(id='taskInfo.subjects.related',
            ng-model='taskInfo.subjects.related',
            type='hidden',
            multiple='multiple',
            ui-select2='relatedSubjectSelect2Adapter',
            data-placeholder='Choose a subject...',
            ng-readonly='formModels.relatedSubject.readonly',
            style='width:100%;')

          +field2('Grade Level', 'taskInfo.gradeLevel', 'formModels.gradeLevel')
            +select2GradeLevel('gradeLevelDataProvider | filter:gradeLevelFilter','Choose a grade level...','formModels.gradeLevel')

          +field2('Item Types', '$qt', 'formModels.componentTypes')
            ul
              li(ng-repeat='type in componentTypes') {{type}}

        +h_form
          h6 Add the Standards
          +field('Subject', 'standardFilterOption.subject')

            select(id='standardFilterOption.subject', ng-model='standardFilterOption.subject', ng-options='c.name for c in standardsTree')
              option(value='') {{standardFilterPlaceholder.subject}}

          +field('Category','standardFilterOption.category')
            select(id='standardFilterOption.category', ng-model='standardFilterOption.category', ng-options='p.name for p in standardFilterOption.subject.items')
              option(value='') {{standardFilterPlaceholder.category}}

          +field('Sub-Category','standardFilterOption.subCategory')
            select(id='standardFilterOption.subCategory',ng-model='standardFilterOption.subCategory', ng-options='z for z in standardFilterOption.category.items')
              option(value='') {{standardFilterPlaceholder.subCategory}}

          +field('Standards','profile.standards')
            input(id='profile.standards', type='text', ui-select2='standardsAdapter', ng-model='profile.standards', style='width: 100%;')

          .lexile(ng-show='isLiteracyStandardSelected')
            +field2('Lexile Score', 'profile.lexile', 'formModels.lexile')
              input.form-control(id='profile.lexile', ng-model='profile.lexile', ng-readonly='formModels.lexile.readonly')
              span.measure L

        +form('form-horizontal depth-of-knowledge')
          h6 Depth Of Knowledge

          label(ng-repeat='c in depthOfKnowledgeDataProvider | filter:depthOfKnowledgeFilter')
            input(type='radio',
            ng-model='otherAlignments.depthOfKnowledge',
            ng-disabled='formModels.depthOfKnowledge.readonly',
            value='{{c.key}}')
            | {{ c.value }}


        +form('form-horizontal blooms-taxonomy')
          h6 Bloom's Taxonomy

          label(ng-repeat='c in bloomsTaxonomyDataProvider | filter:bloomsTaxonomyFilter')
            input(type='radio',
            ng-model='otherAlignments.bloomsTaxonomy',
            ng-disabled='formModels.bloomsTaxonomy.readonly',
            value='{{c.key}}')
            | {{ c.value }}

        +h_form
          h6 Key Skills
          .form-group(ng-show='formModels.keySkills.visible', ng-repeat='skills in keySkillsDataProvider | filter:keySkillsFilter')
            label.col-sm-3.control-label {{skills.header}}
            .col-sm-9
              select(
                ng-model='keySkills[skills.header]',
                ui-select2='',
                multiple='',
                data-placeholder='Choose one or more key skills...',
                ng-readonly='formModels.keySkills.readonly',
                style='width:100%;')
                option(ng-repeat="c in skills.list | filter:keySkillsSubListFilter",value="{{c}}") {{c}}

        +h_form
          h6 Copyright Information
          +field('* Author', 'contributorDetails.author', 'formModels.author')
          +field('Credentials','contributorDetails.credentials', 'formModels.credentials')
            select(id='contributorDetails.credentials',ng-model='contributorDetails.credentials', ng-options='c.key as c.value for c in credentialsDataProvider | filter:credentialsFilter', ng-disabled='formModels.credentials.readonly')
            input(id='contributorDetails.credentialsOther',ng-show='isCredentialsOtherSelected', type='text', placeholder='Enter credentials...', ng-model='contributorDetails.credentialsOther', ng-readonly='formModels.credentials.readonly')
          +field('* Copyright Owner','contributorDetails.copyrightOwner', 'formModels.copyrightOwner')
          +field('* Copyright Year','contributorDetails.copyrightYear', 'formModels.copyrightYear')
            select(id='contributorDetails.copyrightYear',ng-model='contributorDetails.copyrightYear', ng-options='c for c in copyrightYearDataProvider | filter:copyrightYearFilter', style='width:170px;', ng-disabled='formModels.copyrightYear.readonly')
          +field('* Copyright Expiration','contributorDetails.copyrightExpirationDate', 'formModels.copyrightExpirationDate')
            select(id='contributorDetails.copyrightExpirationDate',ng-model='contributorDetails.copyrightExpirationDate', ng-options='c for c in copyrightExpirationDateDataProvider | filter:copyrightExpirationDateFilter', style='width:170px;', ng-disabled='formModels.copyrightExpirationDate.readonly')
          +field('Website URL', 'contributorDetails.sourceUrl', 'formModels.sourceUrl')

        +h_form
          h6 Additional Media Copyright
          additional-copyright-information-for-profile(copyrights='contributorDetails.additionalCopyrights',
          prompt='Does this item contain any other copyrighted materials? E.g. book passage, image, etc.')

        +h_form
          h6 Creative Commons License

          +field('Make this available via a','contributorDetails.licenseType')
            table.license
              tr
                td
                  select(id="license",ng-model="contributorDetails.licenseType",
                  ng-options="c.key as c.value for c in licenseTypeDataProvider")
                td
                  span(ng-show="!contributorDetails.licenseType",style="color: #888; font-style: italic;")
                    | Not Assigned
                  img(ng-show="contributorDetails.licenseType",ng-src="{{getLicenseTypeUrl(contributorDetails.licenseType)}}")
                td
                  a(href="http://creativecommons.org/licenses/",target="_blank") Learn More

        +h_form
          h6 Prior Use

          +field2('This item was previously used in', 'profile.priorUse', 'formModels.priorUse')
            select(id='profile.priorUse', ng-model='profile.priorUse', ng-options='c.key as c.value for c in priorUseDataProvider | filter:priorUseFilter', ng-disabled='formModels.depthOfKnowledge.readonly')
            input(ng-show='isPriorUseOtherSelected', type='text', placeholder='Enter prior use...', ng-model='profile.priorUseOther', ng-readonly='formModels.depthOfKnowledge.readonly')

          +field2('Grade Level', 'profile.priorGradeLevel', 'formModels.priorGradeLevel')
            +select2GradeLevel('priorGradeLevelDataProvider | filter:priorGradeLevelFilter','Choose a grade level...','formModels.priorGradeLevel')

        +h_form
          h6 Reviews Passed

          +field('This item passed the following reviews', 'profile.reviewsPassed')
            label(ng-repeat='rp in reviewsPassedDataProvider | filter:reviewsPassedFilter', style='width:50%;')
              input(type='checkbox',ng-model='rp.selected',ng-change='onChangeReviewsPassed(rp.key)',style='margin-right: 3px;')
              | {{rp.key}}
              input(ng-if='"Other" === rp.key', ng-show='rp.selected', style='margin-left:10px;', type='text', placeholder='Enter review...', ng-model='profile.reviewsPassedOther')


    .col-md-6
      div(ng-if="previewOn", profile-preview="",ng-model="item")



