extends layout

block header-scripts
  script.
    var less = {env: "development", globalVars: !{colors}};
    less.globalVars = less.globalVars || {};
    var defaultColors = {
      "incorrect-color": "#EC971F",
      "correct-color": "#3c763d",
      "partial-color": "#3a87ad",
      "warning-color": "#a94442"
    };
    for (var c in defaultColors) {
      less.globalVars[c] = less.globalVars[c] || defaultColors[c];
    }

block content

  | <!-- 
  |  !{versionInfo}
  | -->


  include templates/question
  include templates/profile
  include templates/supporting-materials

  .root(ng-controller="Root", dimension-propagator='')
    .container-fluid
      include partials/nav
    .main-content(ui-view="main")


//After the angular module has been created.
block after-main-script

  script(type="text/javascript").

    (function(){

      function mkEditorState(name){
        return {
          url: '/' + name,
          views: {
            main: {
              templateUrl: '/templates/' + name
            }
          }
        }
      }

      var appLoadConfig = {
        defaultPath: '/question',
        states: {
          question : mkEditorState('question'),
          profile : mkEditorState('profile'),
          'supporting-materials' : {
            url: '/supporting-materials/{index}',
            params: {
              index: { value: '0' }
            },
            views: {
              main: {
                templateUrl: '/templates/supporting-materials'
              }
            }
          }
        }
      };

      function uiRouterConfig($provide, $stateProvider, $urlRouterProvider) {
        $urlRouterProvider.otherwise(appLoadConfig.defaultPath);
        for( var x in appLoadConfig.states){
          $stateProvider.state(x, appLoadConfig.states[x]);
        }
      }
      
      angular.module('corespring-#{appName}').constant("STATIC_PATHS", !{staticPaths} ); 
      angular.module('corespring-#{appName}').config(uiRouterConfig);
      
      angular.module('corespring-#{appName}')
        .config(['$tooltipProvider', function($tooltipProvider) {
          //add ng-ui-tooltip-close as an event to close the tooltip
          //this enables you to hide the tooltip by calling elem.trigger('ng-ui-tooltip-close');
          $tooltipProvider.setTriggers({
            mouseenter: 'mouseleave ng-ui-tooltip-close',
            click: 'click ng-ui-tooltip-close',
            focus: 'blur ng-ui-tooltip-close'
          });
        }]);
    })(this);